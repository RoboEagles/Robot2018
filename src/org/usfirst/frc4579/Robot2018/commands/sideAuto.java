// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc4579.Robot2018.commands;
import edu.wpi.first.wpilibj.command.Command;
import org.usfirst.frc4579.Robot2018.Robot;
import org.usfirst.frc4579.Robot2018.commands.autonomous;

/**
 *
 */
public class sideAuto extends Command {

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_DECLARATIONS
 
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_DECLARATIONS

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR
    public sideAuto() {

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_SETTING

        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_SETTING
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
    }

	int step= 1;
	
    // Called just before this Command runs the first time
    @Override
    protected void initialize() {
    	// Edits the direction according to what switch we are going for
//    	if (Robot.gameData == 'L') {
//    		int direction = 1;
//    	}
//    	else {
//    		int direction = -1;
//    	}
    	setTimeout(5);
    }

    // Called repeatedly when this Command is scheduled to run
    @Override
    protected void execute() {
//    	if(step%2 == 1 || Robot.measurement.getCounts() < autonomous.autoDirections[step-1]){
//    		Robot.driveTrain.driveStraight(.5);
//    	}
//    	
//    	else if(step%2 == 0 || Robot.measurement.getAngle() < autonomous.angles[step-1]){
//    		Robot.driveTrain.joeyAutoDrive(0, .5);
//    	}
    	
    }

    // Make this return true when this Command no longer needs to run execute()
    @Override
    protected boolean isFinished() {
        return isTimedOut();
    }

    // Called once after isFinished returns true
    @Override
    protected void end() {
    	Robot.driveTrain.stop();
    }

    // Called when another command which requires one or more of the same
    // subsystems is scheduled to run
    @Override
    protected void interrupted() {
    	end();
    }
}
